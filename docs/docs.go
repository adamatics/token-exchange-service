// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "Exchange a user access token for a downstream service access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Exchange token",
                "parameters": [
                    {
                        "description": "Token exchange request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid_request"
                },
                "error_description": {
                    "type": "string",
                    "example": "The request is missing required parameters"
                }
            }
        },
        "main.RequestBody": {
            "type": "object",
            "required": [
                "scopes",
                "user_assertion"
            ],
            "properties": {
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://graph.microsoft.com/.default"
                    ]
                },
                "user_assertion": {
                    "type": "string",
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGci..."
                }
            }
        },
        "main.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGci..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3599
                },
                "refresh_token": {
                    "type": "string",
                    "example": "0.ARwA6WgJJ9X2qk..."
                },
                "scope": {
                    "type": "string",
                    "example": "https://graph.microsoft.com/.default"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Token Exchange Service API",
	Description:      "Service for exchanging Azure AD tokens using OAuth 2.0 On-Behalf-Of flow",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
